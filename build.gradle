buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'dev.sangco'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	compile('org.modelmapper:modelmapper:1.1.0')
	compile('org.apache.poi:poi-ooxml:3.16')
	compile('org.postgresql:postgresql')
	compile('org.apache.httpcomponents:httpclient:4.5.1')
	compile('com.querydsl:querydsl-apt:4.1.4')
	compile('com.querydsl:querydsl-jpa:4.1.4')
	compileOnly('org.projectlombok:lombok')
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}


sourceSets {
	main {
		java {
			srcDirs 'src/main/java', 'src/main/generated'
		}
	}
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	file(new File(projectDir, "/src/main/generated")).deleteDir()
	file(new File(projectDir, "/src/main/generated")).mkdirs()
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.compileOnly
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = file('src/main/generated')
}

compileJava {
	dependsOn generateQueryDSL
}

clean.doLast {
	file(new File(projectDir, "/src/main/generated")).deleteDir()
}
